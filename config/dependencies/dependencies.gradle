/**
 * Define all dependencies for all projects and the repositories in which to retrieve them.
 */

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    appVersionCode = 01_00_00_00
    appVersionName = "0.0.1"

    versions = [
            // Build
            build           : [
                    android: [
                            tools     : '28.0.3',
                            minSdk    : 21,
                            targetSdk : 28,
                            compileSdk: 28
                    ]
            ],

            // Android
            androidx        : '1.1.0-alpha05',
            fragment        : '1.1.0-alpha09',
            constraint      : '1.1.3',
            cardView        : '1.0.0',
            supportLib      : '1.1.0-alpha07',
            archComponent   : '2.2.0-alpha01',
            glide           : '4.10.0',
            multidex        : '2.0.1',
            core_ktx        : '1.2.0-rc01',
            support         : '26.0.2',
            swipeRefresh    : '1.1.0-alpha03',
            location        : '16.0.0',
            recyclerview    : '1.1.0-rc01',
            materialDesign  : '1.2.0-alpha03',
            activityKtx     : '1.1.0-rc02',
            navigation      : '2.3.0-alpha06',

            // Kotlin
            kotlin          : '1.3.61',

            // Dagger
            dagger          : '2.26',

            // Rx
            rx              : [
                    java   : '2.2.19',
                    android: '2.0.2'
            ],

            // RxPermissions
            rxpermissions   : '0.10.2',

            // Room
            room            : '2.2.0-alpha02',

            // Network
            retrofit        : '2.6.2',
            okHttp          : [
                    okHttp: '4.2.0',
                    stetho: '1.5.1'
            ],
            gson            : '2.8.0',

            // Testing
            test            : [
                    junit      : '4.12',
                    android    : [
                            archCore: '2.0.0',
                            atsl    : '1.1.0'
                    ],
                    mockito    : [
                            core   : '2.26.0',
                            all    : '2.0.2-beta',
                            android: '2.26.0',
                            kotlin : '2.1.0'
                    ],
                    powerMock  : '1.6.6',
                    robolectric: [
                            core: '4.2'
                    ],
                    espresso   : '3.2.0-alpha02'
            ],

            remoteConfig    : '16.4.1',
    ]

    libraries = [
            android         : [
                    androidxAppCompat    : "androidx.appcompat:appcompat:${versions.androidx}",
                    fragment             : "androidx.fragment:fragment:${versions.fragment}",
                    androidxRecyclerView : "androidx.recyclerview:recyclerview:${versions.recyclerview}",
                    constraintLayout     : "androidx.constraintlayout:constraintlayout:${versions.constraint}",
                    cardView             : "androidx.cardview:cardview:${versions.cardView}",
                    liveData             : "androidx.lifecycle:lifecycle-livedata:${versions.archComponent}",
                    viewmodel            : "androidx.lifecycle:lifecycle-viewmodel:${versions.archComponent}",
                    lifecycleExtensions  : "androidx.lifecycle:lifecycle-extensions:${versions.archComponent}",
                    lifecycleCommonJava8 : "androidx.lifecycle:lifecycle-common-java8:${versions.archComponent}",
                    archComponentsStreams: "androidx.lifecycle:lifecycle-reactivestreams:${versions.archComponent}",
                    multidex             : "androidx.multidex:multidex:${versions.multidex}",
                    core_ktx             : "androidx.core:core-ktx:${versions.core_ktx}",
                    supportDesign        : "com.google.android.material:material:${versions.materialDesign}",
                    glide                : "com.github.bumptech.glide:glide:${versions.glide}",
                    glideCompiler        : "com.github.bumptech.glide:compiler:${versions.glide}",
                    swipeRefresh         : "androidx.swiperefreshlayout:swiperefreshlayout:${versions.swipeRefresh}",
                    support              : "com.android.support:support-compat:${versions.support}",
                    activityKtx          : "androidx.activity:activity-ktx:${versions.activityKtx}",
                    location             : "com.google.android.gms:play-services-location:${versions.location}"
            ],

            kotlin          : [
                    kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
            ],

            dagger          : [
                    android  : "com.google.dagger:dagger-android:${versions.dagger}",
                    support  : "com.google.dagger:dagger-android-support:${versions.dagger}",
                    processor: "com.google.dagger:dagger-android-processor:${versions.dagger}",
                    compiler : "com.google.dagger:dagger-compiler:${versions.dagger}"
            ],

            rx              : [
                    java   : "io.reactivex.rxjava2:rxjava:${versions.rx.java}",
                    android: "io.reactivex.rxjava2:rxandroid:${versions.rx.android}"
            ],

            room            : [
                    runtime  : "androidx.room:room-runtime:${versions.room}",
                    compiler : "androidx.room:room-compiler:${versions.room}",
                    rxJava   : "androidx.room:room-rxjava2:${versions.room}",
                    migration: "androidx.room:room-migration:${versions.room}"
            ],

            retrofit        : [
                    retrofit     : "com.squareup.retrofit2:retrofit:${versions.retrofit}",
                    converterGson: "com.squareup.retrofit2:converter-gson:${versions.retrofit}",
                    rxjavaAdapter: "com.squareup.retrofit2:adapter-rxjava2:${versions.retrofit}"
            ],

            okHttp          : [
                    okHttp    : "com.squareup.okhttp3:okhttp:${versions.okHttp.okHttp}",
                    logging   : "com.squareup.okhttp3:logging-interceptor:${versions.okHttp.okHttp}",
                    mockServer: "com.squareup.okhttp3:mockwebserver:${versions.okHttp.okHttp}",
                    stetho    : "com.facebook.stetho:stetho-okhttp3:${versions.okHttp.stetho}"
            ],

            gson            : "com.google.code.gson:gson:${versions.gson}",

            test            : [
                    junit      : "junit:junit:${versions.test.junit}",
                    android    : [
                            fragment: "androidx.fragment:fragment-testing:${versions.fragment}",
                            archCore: "androidx.arch.core:core-testing:${versions.test.android.archCore}",
                            atsl    : [
                                    core    : "androidx.test:core:${versions.test.android.atsl}",
                                    core_ktx: "androidx.test:core-ktx:${versions.test.android.atsl}",
                                    runner  : "androidx.test:runner:${versions.test.android.atsl}",
                                    rules   : "androidx.test:rules:${versions.test.android.atsl}"
                            ],
                            room    : "androidx.room:room-testing:${versions.room}"
                    ],
                    mockito    : [
                            core   : "org.mockito:mockito-core:${versions.test.mockito.core}",
                            all    : "org.mockito:mockito-all:${versions.test.mockito.all}",
                            android: "org.mockito:mockito-android:${versions.test.mockito.android}",
                            kotlin : "com.nhaarman.mockitokotlin2:mockito-kotlin:${versions.test.mockito.kotlin}",
                            inline : "org.mockito:mockito-inline:${versions.test.mockito.core}" // mock/spy final class
                    ],
                    powerMock  : [
                            junit       : "org.powermock:powermock-module-junit4:${versions.test.powerMock}",
                            junitRule   : "org.powermock:powermock-module-junit4-rule:${versions.test.powerMock}",
                            mockito     : "org.powermock:powermock-api-mockito2:1.7.4",
                            classloading: "org.powermock:powermock-classloading-xstream:${versions.test.powerMock}"
                    ],
                    robolectric: [
                            core: "org.robolectric:robolectric:${versions.test.robolectric.core}"
                    ],
                    espresso   : [
                            core   : "androidx.test.espresso:espresso-core:${versions.test.espresso}",
                            contrib: "androidx.test.espresso:espresso-contrib:${versions.test.espresso}",
                            intents: "androidx.test.espresso:espresso-intents:${versions.test.espresso}"
                    ]
            ],

            sqlite          : "org.xerial:sqlite-jdbc:${versions.sglite}",

            remoteConfig    : "com.google.firebase:firebase-config:${versions.remoteConfig}",

            navigationFragment  : "androidx.navigation:navigation-fragment-ktx:${versions.navigation}",
            navigationUi        : "androidx.navigation:navigation-ui-ktx:${versions.navigation}",
    ]
}